<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" xmlns:TweetOBoxMain="clr-namespace:TweetOBoxMain" xmlns:TweetOBoxMain_Utility="clr-namespace:TweetOBoxMain.Utility">
<TweetOBoxMain_Utility:StreamNamesConverter x:Key="StreamNamesConverter"/>

  <Style x:Key="UnReadMessagesStyle" TargetType="{x:Type Label}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Label}">
          <Grid>
            <!--<Ellipse Stroke="Black"/>-->
            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Text="{Binding UnReadCount}" Foreground="Red" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="EnterPinTextBoxStyle" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBox}">
          <Border x:Name="border" BorderBrush="#FF9E9E9E" BorderThickness="1,1,0.5,0.5" CornerRadius="1">
            <Grid>
              <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
              <TextBlock x:Name="textBlock" Opacity="1" Text="Type your authorized pin here" FontStyle="Italic" Width="175" Background="White"  TextWrapping="Wrap" Visibility="Hidden" VerticalAlignment="Center" HorizontalAlignment="Left" Padding="3" FontFamily="Tahoma" FontSize="9" Foreground="#FFb6b6b6" />
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsFocused" Value="False" />
                <Condition Property="Text" Value="" />
              </MultiTrigger.Conditions>
              <Setter Property="Visibility" TargetName="textBlock" Value="Visible" />
            </MultiTrigger>
            <Trigger Property="IsFocused" Value="True"/>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>

    </Setter>
    <Setter  Property="Background" Value="#FFFFFFFF" />
  </Style>

  <Style x:Key="SimpleListBoxItem" TargetType="{x:Type ListBoxItem}">
    <Setter Property="Background" Value="{x:Null}"/>
    <Setter Property="Opacity" Value="1"/>
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListBoxItem}">
          <Border
         x:Name="Border"
         Padding="2"
         SnapsToDevicePixels="true">
            <ContentPresenter />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsSelected" Value="true">
              <Setter TargetName="Border" Property="Background"
                   Value="{x:Null}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="CheckBoxFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Border>
            <Rectangle
              Margin="15,0,0,0"
              StrokeThickness="1"
              Stroke="#60000000"
              StrokeDashArray="1 2"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <LinearGradientBrush x:Key="NormalBorderBrushCheck" StartPoint="0,0" EndPoint="0,1">
    <LinearGradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop Color="#CCC" Offset="0.0"/>
        <GradientStop Color="#444" Offset="1.0"/>
      </GradientStopCollection>
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="NormalBrushCheck" StartPoint="0,0" EndPoint="0,1">
    <LinearGradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop Color="#FFF" Offset="0.0"/>
        <GradientStop Color="#CCC" Offset="1.0"/>
      </GradientStopCollection>
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>

  <Style x:Key="CheckBoxStyle" TargetType="{x:Type CheckBox}">
    <Setter Property="SnapsToDevicePixels" Value="true"/>
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="FocusVisualStyle"	Value="{DynamicResource CheckBoxFocusVisual}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type CheckBox}">
          <BulletDecorator Background="Transparent">
            <BulletDecorator.Bullet>
              <Border x:Name="Border"
                Width="13"
                Height="13"
                CornerRadius="0"
                Background="{x:Null}"
                BorderThickness="1"
                BorderBrush="{x:Null}">
                <!--<Path 
                  Width="7" Height="7" 
                  x:Name="CheckMark"
                  SnapsToDevicePixels="False" 
                  Stroke="{StaticResource GlyphBrush}"
                  StrokeThickness="2"
                  Data="M 0 0 L 7 7 M 0 7 L 7 0" />-->
                <Canvas>
                  <Border  x:Name="Bd"   Background="{DynamicResource NormalBrushCheck}"  BorderBrush="{DynamicResource NormalBorderBrushCheck}" Canvas.Top="2" BorderThickness="1" Width="10" Height="10" />
                  <Path Canvas.Top="0" x:Name="CheckMark" Width="10" Height="12" Stretch="Fill" StrokeThickness="0.666667" StrokeLineJoin="Round" Stroke="#FF220700" Fill="#FF737373" Data="F1 M 0.333313,21.7066L 12.7023,38.1111L 47.4445,2.53627C 47.4445,2.53627 38.8953,-11.77 12.2475,32.2933L 4.88074,16.8425L 0.333313,21.7066 Z " Margin="0" VerticalAlignment="Bottom"/>

                </Canvas>
              </Border>
            </BulletDecorator.Bullet>
            <ContentPresenter Margin="4,0,0,0"
              VerticalAlignment="Center"
              HorizontalAlignment="Left"
              RecognizesAccessKey="True"/>
          </BulletDecorator>
          <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="false">
              <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="{x:Null}">
              <Setter TargetName="CheckMark" Property="Data" Value="M 0 7 L 7 0" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter TargetName="Bd" Property="Background" Value="{DynamicResource DarkBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
              <Setter TargetName="Bd" Property="Background" Value="{DynamicResource PressedBrush1}" />
              <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource PressedBorderBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter TargetName="Bd" Property="Background" Value="{DynamicResource CheckDisabledBackgroundBrush}" />
              <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource CheckDisabledForegroundBrush}" />
              <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Foreground" Value="#FF220700"/>
  </Style>

  <SolidColorBrush x:Key="CheckDisabledForegroundBrush" Color="#888" />

  <SolidColorBrush x:Key="CheckDisabledBackgroundBrush" Color="#EEE" />

  <LinearGradientBrush x:Key="DarkBrush" StartPoint="0,0" EndPoint="0,1">
    <LinearGradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop Color="#FFF" Offset="0.0"/>
        <GradientStop Color="#AAA" Offset="1.0"/>
      </GradientStopCollection>
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="PressedBrush1" StartPoint="0,0" EndPoint="0,1">
    <LinearGradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop Color="#BBB" Offset="0.0"/>
        <GradientStop Color="#EEE" Offset="0.1"/>
        <GradientStop Color="#EEE" Offset="0.9"/>
        <GradientStop Color="#FFF" Offset="1.0"/>
      </GradientStopCollection>
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>

  <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE" />

  <LinearGradientBrush x:Key="DarkButtonsBrush" EndPoint="0,1" StartPoint="0,0">
    <GradientStop Color="#FFF3F3F3" Offset="0"/>
    <GradientStop Color="#FFEBEBEB" Offset="0.5"/>
    <GradientStop Color="#FFDDDDDD" Offset="0.5"/>
    <GradientStop Color="#FFCDCDCD" Offset="1"/>
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="TweetsButtonStyle" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FF30494E" Offset="1"/>
    <GradientStop Color="#FF30494E" Offset="1"/>
    <GradientStop Color="#FF30494E" Offset="1"/>
    <GradientStop Color="#FF30494E" Offset="1"/>
    <GradientStop Color="#FF30494E" Offset="1"/>
    <GradientStop Color="#FF30494E" Offset="1"/>
    <GradientStop Color="#FF812500" Offset="0.013"/>
    <GradientStop Color="#FF30494E" Offset="1"/>
    <GradientStop Color="#FF280800" Offset="0.998"/>
    <GradientStop Color="#FF360C00" Offset="0.477"/>
    <GradientStop Color="#FF711F00" Offset="0.448"/>
  </LinearGradientBrush>

  <Style x:Key="FilterButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid>
            <Image x:Name="image" Source="/Images/deletecontact.png"/>
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsFocused" Value="True"/>
            <Trigger Property="IsDefaulted" Value="True"/>
            <Trigger Property="IsMouseOver" Value="True"/>
            <Trigger Property="IsPressed" Value="True"/>
            <Trigger Property="IsEnabled" Value="False"/>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="CloseFilterButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid>
            <Image x:Name="image" Source="/Images/filter.png"/>
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsFocused" Value="True"/>
            <Trigger Property="IsDefaulted" Value="True"/>
            <Trigger Property="IsMouseOver" Value="True"/>
            <Trigger Property="IsPressed" Value="True"/>
            <Trigger Property="IsEnabled" Value="False"/>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="FilterTextButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid>
            <Image x:Name="image" Source="/Images/close-filter.png" Width="14" Height="11"/>
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsFocused" Value="True"/>
            <Trigger Property="IsDefaulted" Value="True"/>
            <Trigger Property="IsMouseOver" Value="True"/>
            <Trigger Property="IsPressed" Value="True"/>
            <Trigger Property="IsEnabled" Value="False"/>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="FilterSaveButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid>
            <Image x:Name="image" Source="/Images/tick.png" Width="14" Height="11"/>
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsFocused" Value="True"/>
            <Trigger Property="IsDefaulted" Value="True"/>
            <Trigger Property="IsMouseOver" Value="True"/>
            <Trigger Property="IsPressed" Value="True"/>
            <Trigger Property="IsEnabled" Value="False"/>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="PasswordBoxStyle2" TargetType="{x:Type PasswordBox}"  BasedOn="{StaticResource {x:Type PasswordBox}}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type PasswordBox}">
          <Border x:Name="border" BorderThickness="2,2,0.8,0.7" CornerRadius="1.5">
            <Border.BorderBrush>
              <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="Black" Offset="0"/>
                <GradientStop Color="Gray" Offset="1"/>
                <GradientStop Color="#FF454545"/>
                <GradientStop Color="#FFD0D0D0"/>
                <GradientStop Color="#FFC5C5C5" Offset="1"/>
                <GradientStop Color="#FFC8C8C8"/>
                <GradientStop Color="#FFC3C3C3" Offset="0.453"/>
                <GradientStop Color="#FFB0B0B0" Offset="0.707"/>
                <GradientStop Color="#FF9C9C9C" Offset="0.996"/>
                <GradientStop Color="#FF959595"/>
                <GradientStop Color="#FFB6B6B6"/>
                <GradientStop Color="#FFB0B0B0"/>
                <GradientStop Color="#FFA8A8A8" Offset="1"/>
                <GradientStop Color="#FFC2C2C2" Offset="1"/>
                <GradientStop Color="#FFC1C1C1" Offset="1"/>
              </LinearGradientBrush>
            </Border.BorderBrush>
            <Border.Background>
              <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">

                <GradientStop Color="White" Offset="1"/>

              </LinearGradientBrush>
            </Border.Background>
            <Grid>
              <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
              <TextBlock x:Name="textBlock" Margin="0" Opacity="1" Text="Type your twitter password here" FontStyle="Italic" Width="175" Background="White"  TextWrapping="Wrap" Visibility="Hidden" VerticalAlignment="Bottom" HorizontalAlignment="Left" Padding="3" FontFamily="Tahoma" FontSize="9" Foreground="#FFb6b6b6" />
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsFocused" Value="False" />

              </MultiTrigger.Conditions>
              <Setter Property="Visibility" TargetName="textBlock" Value="Visible" />
            </MultiTrigger>
            <Trigger Property="IsFocused" Value="True"/>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Background" Value="White"/>
  </Style>

  <Style x:Key="RetweetButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid>
            <Image ToolTip="Re-Tweet" Source="/Images/retweet-msg.png"/>
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsFocused" Value="True"/>
            <Trigger Property="IsDefaulted" Value="True"/>
            <Trigger Property="IsMouseOver" Value="True"/>
            <Trigger Property="IsPressed" Value="True"/>
            <Trigger Property="IsEnabled" Value="False"/>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- All the following is required to Style the ScrollViewer 
         -->

  <!-- Brushes used in Styling of ScrollViewer -->
  <SolidColorBrush x:Key="StandardBorderBrush" Color="#888" />
  <SolidColorBrush x:Key="StandardBackgroundBrush" Color="#FFF" />
  <SolidColorBrush x:Key="HoverBorderBrush" Color="#DDD" />
  <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="Gray" />
  <SolidColorBrush x:Key="SelectedForegroundBrush" Color="White" />
  <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
  <SolidColorBrush x:Key="NormalBrush" Color="#888" />
  <SolidColorBrush x:Key="NormalBorderBrush" Color="#888" />
  <SolidColorBrush x:Key="HorizontalNormalBrush" Color="#888" />
  <SolidColorBrush x:Key="HorizontalNormalBorderBrush" Color="#888" />
  <LinearGradientBrush x:Key="ListBoxBackgroundBrush"
StartPoint="0,0" EndPoint="1,0.001">
    <LinearGradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop Color="White" Offset="0.0" />
        <GradientStop Color="White" Offset="0.6" />
        <GradientStop Color="#DDDDDD" Offset="1.2"/>
      </GradientStopCollection>
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  
  <LinearGradientBrush x:Key="StandardBrush"
StartPoint="0,0" EndPoint="0,1">
    <LinearGradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop Color="#FFF" Offset="0.0"/>
        <GradientStop Color="#CCC" Offset="1.0"/>
      </GradientStopCollection>
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  
  <SolidColorBrush x:Key="GlyphBrush" Color="#444" />
  <LinearGradientBrush x:Key="PressedBrush"
StartPoint="0,0" EndPoint="0,1">
    <LinearGradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop Color="#BBB" Offset="0.0"/>
        <GradientStop Color="#EEE" Offset="0.1"/>
        <GradientStop Color="#EEE" Offset="0.9"/>
        <GradientStop Color="#FFF" Offset="1.0"/>
      </GradientStopCollection>
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>

  <!-- SrollViewer ScrollBar Repeat Buttons (at each end) -->
  <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="Focusable" Value="false"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Border
          x:Name="Border"
          Margin="1"
          CornerRadius="0"
          Background="#FF888888"
          BorderBrush="{DynamicResource NormalBorderBrush}"
          BorderThickness="1">
            <Path
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Fill="{StaticResource GlyphBrush}"
            Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsPressed" Value="true">
              <Setter TargetName="Border" Property="Background"
								Value="{StaticResource PressedBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Foreground"
								Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  
  <!-- SrollViewer ScrollBar Repeat Buttons (The part in the middle, 
             not the thumb the long area between the buttons ) -->
  <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="IsTabStop" Value="false"/>
    <Setter Property="Focusable" Value="false"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Grid>
            <Border CornerRadius="3" >
              <Border.Background>
                <ImageBrush ImageSource="/Images/Ic_ScrollBg.png"/>
              </Border.Background>
            </Border>
            <!--  <Image Source="/Images/bg_scrollBtm.png" VerticalAlignment="Bottom"></Image> -->
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  
  <!-- ScrollViewer ScrollBar Thumb, that part that can be dragged
            up/down or left/right Buttons -->
  <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="IsTabStop" Value="false"/>
    <Setter Property="Focusable" Value="false"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border
          CornerRadius="3"
          Background="#FF663500"
          BorderBrush="#FF445052" Width="13"
          BorderThickness="1"  />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <ControlTemplate x:Key="VerticalScrollBar"
			TargetType="{x:Type ScrollBar}">
    <Grid >
      <Grid.RowDefinitions>
        <RowDefinition MaxHeight="0"/>
        <RowDefinition Height="0.00001*"/>
        <RowDefinition MaxHeight="0"/>
      </Grid.RowDefinitions>
      <Border
      Grid.RowSpan="3"
      CornerRadius="3"
      Background="#FF979FA1" />

      <Track
      x:Name="PART_Track"
      Grid.Row="1"
      IsDirectionReversed="true">
        <Track.DecreaseRepeatButton>
          <RepeatButton
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageUpCommand" />
        </Track.DecreaseRepeatButton>
        <Track.Thumb>
          <Thumb
          Style="{StaticResource ScrollBarThumb}"
          Margin="1,0,1,0"
          Background="{StaticResource HorizontalNormalBrush}"
          BorderBrush="{StaticResource HorizontalNormalBorderBrush}" />
        </Track.Thumb>
        <Track.IncreaseRepeatButton>
          <RepeatButton
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageDownCommand" />
        </Track.IncreaseRepeatButton>
      </Track>

    </Grid>
  </ControlTemplate>
  
  <!-- HorizontalScrollBar Template using the previously created Templates -->
  <ControlTemplate x:Key="HorizontalScrollBar"
TargetType="{x:Type ScrollBar}">
    <Grid >
      <Grid.ColumnDefinitions>
        <ColumnDefinition MaxWidth="18"/>
        <ColumnDefinition Width="0.00001*"/>
        <ColumnDefinition MaxWidth="18"/>
      </Grid.ColumnDefinitions>
      <Border
      Grid.ColumnSpan="3"
      CornerRadius="2"
      Background="#F0F0F0" />
      <RepeatButton
      Grid.Column="0"
      Style="{StaticResource ScrollBarLineButton}"
      Width="18"
      Command="ScrollBar.LineLeftCommand"
      Content="M 4 0 L 4 8 L 0 4 Z" />
      <Track
      x:Name="PART_Track"
      Grid.Column="1"
      IsDirectionReversed="False">
        <Track.DecreaseRepeatButton>
          <RepeatButton
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageLeftCommand" />
        </Track.DecreaseRepeatButton>
        <Track.Thumb>
          <Thumb
          Style="{StaticResource ScrollBarThumb}"
          Margin="0,1,0,1"
          Background="{DynamicResource NormalBrush}"
          BorderBrush="{DynamicResource NormalBorderBrush}" />
        </Track.Thumb>
        <Track.IncreaseRepeatButton>
          <RepeatButton
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageRightCommand" />
        </Track.IncreaseRepeatButton>
      </Track>
      <RepeatButton
      Grid.Column="3"
      Style="{StaticResource ScrollBarLineButton}"
      Width="18"
      Command="ScrollBar.LineRightCommand"
      Content="M 0 0 L 4 4 L 0 8 Z"/>
    </Grid>
  </ControlTemplate>
  
  <!-- Style for overall  ScrollBar -->
  <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Style.Triggers>
      <Trigger Property="Orientation" Value="Horizontal">
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="18" />
        <Setter Property="Template"
Value="{StaticResource HorizontalScrollBar}" />
      </Trigger>
      <Trigger Property="Orientation" Value="Vertical">
        <Setter Property="Width" Value="18"/>
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Template"
Value="{StaticResource VerticalScrollBar}" />
      </Trigger>
    </Style.Triggers>
  </Style>

  <!-- Style for overall  ScrollViewer -->
  <Style x:Key="FavsScrollViewer" TargetType="{x:Type ScrollViewer}">
    <Setter Property="OverridesDefaultStyle" Value="True"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollViewer}">
          <StackPanel Orientation="Horizontal">
            <ScrollContentPresenter />
            <Border Margin="0,0,2,0" Width="15" ClipToBounds="True">
              <ScrollBar x:Name="PART_VerticalScrollBar"
            		Value="{TemplateBinding VerticalOffset}"
            		Maximum="{TemplateBinding ScrollableHeight}"
            		ViewportSize="{TemplateBinding ViewportHeight}"
            		Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Width="Auto" />

            </Border>

          </StackPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  
  <Style x:Key="PanelsBorderStyle" TargetType="{x:Type Border}">
    <Setter Property="Background">
      <Setter.Value>
        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
          <GradientStop Color="#FFF3F3F3" Offset="0"/>
          <GradientStop Color="#FFDFDFDF" Offset="1"/>
        </LinearGradientBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="CornerRadius" Value="10"/>
    <Setter Property="Margin" Value="5"/>
    <Setter Property="Width" Value="Auto"/>
    <Setter Property="Height" Value="Auto"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="BorderBrush" Value="#FFCBCBCB"/>
  </Style>
  
  <Style x:Key="PanelsTextBlockStyle" TargetType="{x:Type TextBlock}">
    <Setter Property="Foreground" Value="#FF636363"/>
    <Setter Property="FontFamily" Value="Tahoma"/>
    <Setter Property="FontSize" Value="10.667"/>
  </Style>
  
  <Style x:Key="UserNameButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid>
            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" Margin="-2,0,0,-2" HorizontalAlignment="Left"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsFocused" Value="True"/>
            <Trigger Property="IsDefaulted" Value="True"/>
            <Trigger Property="IsMouseOver" Value="True"/>
            <Trigger Property="IsPressed" Value="True"/>
            <Trigger Property="IsEnabled" Value="False"/>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="FontFamily" Value="Tahoma"/>
    <Setter Property="FontWeight" Value="SemiBold"/>
    <Setter Property="FontSize" Value="11"/>
    <Setter Property="Foreground" Value="#FF253F70"/>
  </Style>
  
  <Style x:Key="UserProfileMoreButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid Width="60" HorizontalAlignment="Left">
            <Image Source="/Images/Ic_more.png" Width="50" Height="15" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,12,0,0"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsFocused" Value="True"/>
            <Trigger Property="IsDefaulted" Value="True"/>
            <Trigger Property="IsMouseOver" Value="True"/>
            <Trigger Property="IsPressed" Value="True"/>
            <Trigger Property="IsEnabled" Value="False"/>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="UserSearchButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid>
            <Image x:Name="image" Source="/Images/Ic_search.png"/>
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsFocused" Value="True"/>
            <Trigger Property="IsDefaulted" Value="True"/>
            <Trigger Property="IsMouseOver" Value="True"/>
            <Trigger Property="IsPressed" Value="True"/>
            <Trigger Property="IsEnabled" Value="False"/>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="{x:Type ToolTip}" TargetType="{x:Type ToolTip}">
    <Setter Property="OverridesDefaultStyle" Value="false"/>
    <Setter Property="HasDropShadow" Value="True"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToolTip}">
          <Border x:Name="Border"
            Background="{DynamicResource LightBrush}"
            BorderBrush="{DynamicResource SolidBorderBrush}"
            BorderThickness="1"
            Width="{TemplateBinding Width}"
            Height="20">
            <ContentPresenter
              Margin="1"
              HorizontalAlignment="Left"
              VerticalAlignment="Top" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="HasDropShadow" Value="true">
              <Setter TargetName="Border" Property="CornerRadius" Value="2"/>
              <Setter TargetName="Border" Property="SnapsToDevicePixels" Value="true"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  
  <LinearGradientBrush x:Key="LightBrush" StartPoint="0,0" EndPoint="0,1">
    <LinearGradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop Color="#FFF" Offset="0.0"/>
        <GradientStop Color="#EEE" Offset="1.0"/>
      </GradientStopCollection>
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  
  <SolidColorBrush x:Key="SolidBorderBrush" Color="#888" />
  <Style x:Key="MinimizeNewButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid>
            <Image x:Name="image" Source="/Images/mini1.png" Width="16" Height="14"/>
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" Content=""/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsFocused" Value="True"/>
            <Trigger Property="IsDefaulted" Value="True"/>
            <Trigger Property="IsMouseOver" Value="True" SourceName="image">
            	<Setter Property="Source" TargetName="image" Value="/TweetOBoxMain;Component/Images/mini2.png"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True"/>
            <Trigger Property="IsEnabled" Value="False"/>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  
  <Style x:Key="CloseNewButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid>
            <Image x:Name="image" Source="/Images/close.png" Width="14" Height="14"/>
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" Content=""/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsFocused" Value="True"/>
            <Trigger Property="IsDefaulted" Value="True"/>
            <Trigger Property="IsMouseOver" Value="True" SourceName="image">
            	<Setter Property="Source" TargetName="image" Value="/TweetOBoxMain;Component/Images/close2.png"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True"/>
            <Trigger Property="IsEnabled" Value="False"/>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  
  <Style x:Key="ReplyTweetButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid>
            <Image x:Name="image" Source="/Images/Ic_rpnormal.png" Width="22" Height="15"/>
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" Content=""/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsFocused" Value="True"/>
            <Trigger Property="IsDefaulted" Value="True"/>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Source" TargetName="image" Value="/TweetOBoxMain;Component/Images/Ic_rpover.png"/>
              <!--	<Setter Property="Margin" TargetName="image" Value="0,0,-2,-2"/>
						<Setter Property="VerticalAlignment" TargetName="image" Value="Bottom"/>
						<Setter Property="Width" TargetName="image" Value="22"/>-->
            </Trigger>
            <Trigger Property="IsPressed" Value="True"/>
            <Trigger Property="IsEnabled" Value="False"/>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  
  <Style x:Key="DirectMsgTweetButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid>
            <Image x:Name="image" Source="/Images/Ic_rtnormal.png" Width="20" Height="13"/>
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" Content=""/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsFocused" Value="True"/>
            <Trigger Property="IsDefaulted" Value="True"/>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Source" TargetName="image" Value="/TweetOBoxMain;Component/Images/Ic_rtover.png"/>
              <!--<Setter Property="Margin" TargetName="image" Value="0,0,-1,2"/>
						<Setter Property="VerticalAlignment" TargetName="image" Value="Center"/>
						<Setter Property="Width" TargetName="image" Value="24"/>
						<Setter Property="HorizontalAlignment" TargetName="image" Value="Right"/> -->
            </Trigger>
            <Trigger Property="IsPressed" Value="True"/>
            <Trigger Property="IsEnabled" Value="False"/>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  
  <Style x:Key="RetweetTweetButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid>
            <Image x:Name="image" Source="/Images/Ic_dmnormal.png" Width="20" Height="13"/>
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" Content=""/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsFocused" Value="True"/>
            <Trigger Property="IsDefaulted" Value="True"/>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Source" TargetName="image" Value="/TweetOBoxMain;Component/Images/Ic_dmover.png"/>
              <!--	<Setter Property="Margin" TargetName="image" Value="-1,2,0,0"/>
						<Setter Property="HorizontalAlignment" TargetName="image" Value="Left"/> -->
            </Trigger>
            <Trigger Property="IsPressed" Value="True"/>
            <Trigger Property="IsEnabled" Value="False"/>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  
  <Style x:Key="FollwerButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid>
            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsFocused" Value="True"/>
            <Trigger Property="IsDefaulted" Value="True"/>
            <Trigger Property="IsMouseOver" Value="True"/>
            <Trigger Property="IsPressed" Value="True"/>
            <Trigger Property="IsEnabled" Value="False"/>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="FontFamily" Value="Tahoma"/>
    <Setter Property="FontSize" Value="11.5"/>
    <Setter Property="Foreground" Value="#FFA1600F"/>
  </Style>
  
  <Style x:Key="FollwoersCloseButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid>
            <Image RenderTransformOrigin="17.452,0.859" Source="/Images/Ic_followclose.png"/>
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsFocused" Value="True"/>
            <Trigger Property="IsDefaulted" Value="True"/>
            <Trigger Property="IsMouseOver" Value="True"/>
            <Trigger Property="IsPressed" Value="True"/>
            <Trigger Property="IsEnabled" Value="False"/>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  
  <Style x:Key="FriendsFollowingButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid>
            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsFocused" Value="True"/>
            <Trigger Property="IsDefaulted" Value="True"/>
            <Trigger Property="IsMouseOver" Value="True"/>
            <Trigger Property="IsPressed" Value="True"/>
            <Trigger Property="IsEnabled" Value="False"/>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="FontFamily" Value="Tahoma"/>
    <Setter Property="FontWeight" Value="Bold"/>
    <Setter Property="FontSize" Value="11.5"/>
    <Setter Property="Foreground" Value="#FF0C5C04"/>
  </Style>
  
  <Style x:Key="TweetstypeToggleButtonStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Grid>
            <Border Background="Gray" Width="120" d:IsHidden="True">
              <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" Margin="0,3,0,0"  HorizontalAlignment="Stretch"/>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="FontFamily" Value="Tahoma"/>
    <Setter Property="FontSize" Value="10.5"/>
    <Setter Property="Foreground" Value="#FF656565"/>
    <Setter Property="FontWeight" Value="Normal"/>
    <Setter Property="Margin" Value="0,0,5,0"/>
    <Setter Property="VerticalAlignment" Value="Bottom"/>
  </Style> 
  
  <Style x:Key="PanelToggleButtonStyle" TargetType="{x:Type ToggleButton}">
  	<Style.Triggers>
  		<Trigger Property="IsChecked" Value="True">
  			<Setter Property="Background" Value="#FF29000B"/>
  			<Setter Property="Foreground" Value="White"/>
  		</Trigger>
  	</Style.Triggers>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Grid>
            <Border x:Name="border" Background="{TemplateBinding Background}" Width="130" CornerRadius="3" Margin="0,0,0,0" Padding="0,0,0,0">
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="0.779*"/>
                  <ColumnDefinition Width="0.221*"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" Margin="5,3,0,0"  HorizontalAlignment="Stretch" Grid.ColumnSpan="2"/>
                <Label  IsHitTestVisible="False" HorizontalAlignment="Left" IsEnabled="False" Content="{Binding UnReadCount}" Width="Auto" Margin="0,0,0,-1" Foreground="Red" Grid.Column="1" />
              </Grid>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="FontFamily" Value="Tahoma"/>
    <Setter Property="FontSize" Value="10.5"/>
    <Setter Property="Foreground" Value="#FF656565"/>
    <Setter Property="FontWeight" Value="Normal"/>
    <Setter Property="Margin" Value="0,0,5,0"/>
    <Setter Property="VerticalAlignment" Value="Bottom"/>
    <Setter Property="Background" Value="#FFCBCBCB"/>
  </Style>
  
  <Style x:Key="ToggleButtonStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">     
		<Grid>
            <Border Background="{x:Null}" d:IsHidden="True" VerticalAlignment="Top"/>
			
            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" Margin="0"  HorizontalAlignment="Stretch"/>
         </Grid>     
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="FontFamily" Value="Tahoma"/>
    <Setter Property="FontSize" Value="11"/>
    <Setter Property="Foreground" Value="#FF656565"/>
    <Setter Property="FontWeight" Value="Normal"/>
    <Setter Property="Margin" Value="0,0,5,0"/>
    <Setter Property="VerticalAlignment" Value="Bottom"/>
  </Style>
  
  <Style x:Key="SearchToggleButtonStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">     
		
            <Border Background="#02CBCBCB" VerticalAlignment="Top" Height="20" CornerRadius="3,0,0,3">
			<StackPanel Orientation="Horizontal">				
					<TextBlock Text="[Twitter]"  FontFamily="Tahoma" Foreground="{TemplateBinding Foreground}" FontSize="11" Margin="3,3,0,0" VerticalAlignment="Top" /> 
					<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" Margin="0,3,0,0"  HorizontalAlignment="Stretch" d:LayoutOverrides="Height" />
				
			</StackPanel>
			</Border>
           
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="FontFamily" Value="Tahoma"/>
    <Setter Property="FontSize" Value="11"/>
    <Setter Property="Foreground" Value="#FF656565"/>
    <Setter Property="FontWeight" Value="Normal"/>
    <Setter Property="Margin" Value="0,0,5,0"/>
    <Setter Property="VerticalAlignment" Value="Bottom"/>
  </Style>
  
  <Style x:Key="FilterToggleButtonStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Background="{TemplateBinding Background}" VerticalAlignment="Top" CornerRadius="3,0,0,3" Height="20" Opacity="1">
            
				<StackPanel HorizontalAlignment="Left" Width="132.257" Orientation="Horizontal" Margin="3,0,0,0">
              <TextBlock Text="{Binding  PanelType.DisplayName}" Margin="3,3,0,0" Foreground="{TemplateBinding Foreground}" FontFamily="Tahoma" FontSize="11"    />
              <TextBlock Text=" / " HorizontalAlignment="Right" Foreground="{TemplateBinding Foreground}" Margin="0,3,-2,0" Grid.Column="0" d:LayoutOverrides="GridBox"/>
              <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" Margin="0,3,0,0"  HorizontalAlignment="Stretch" Grid.ColumnSpan="2" Grid.Column="1"/>
			  </StackPanel>
            
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="FontFamily" Value="Tahoma"/>
    <Setter Property="FontSize" Value="11"/>
    <Setter Property="Foreground" Value="#FF656565"/>
    <Setter Property="FontWeight" Value="Normal"/>
    <Setter Property="Margin" Value="0,0,5,0"/>
    <Setter Property="VerticalAlignment" Value="Bottom"/>
  </Style>
  
  <Style x:Key="TwitterListToggleButtonStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Background="{x:Null}" VerticalAlignment="Top" CornerRadius="3,0,0,3" Height="20">
              <StackPanel>
                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" Margin="3,3,0,0"/>
              </StackPanel>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="FontFamily" Value="Tahoma"/>
    <Setter Property="FontSize" Value="11"/>
    <Setter Property="Foreground" Value="#FF656565"/>
    <Setter Property="FontWeight" Value="Normal"/>
    <Setter Property="Margin" Value="0,0,5,0"/>
    <Setter Property="VerticalAlignment" Value="Bottom"/>
  </Style>
  
  <Style x:Key="PluginButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">         
            <Border Background="{x:Null}" Width="Auto" >
			<StackPanel>
			
            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
			</StackPanel>
			</Border>
          
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="FontFamily" Value="Tahoma"/>
    <Setter Property="FontSize" Value="11"/>
    <Setter Property="Foreground" Value="#FF656565"/>
    <Setter Property="FontWeight" Value="Normal"/>
    <Setter Property="Margin" Value="0,0,5,0"/>
  </Style>
  
<Style x:Key="ListToggleButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">         
            <Border Background="#FFCBCBCB" Width="Auto" Height="20" CornerRadius="3,0,0,3" >
			<StackPanel>			
            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" Margin="3,3,0,0"/>
			</StackPanel>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="FontFamily" Value="Tahoma"/>
    <Setter Property="FontSize" Value="11"/>
    <Setter Property="Foreground" Value="#FF656565"/>
    <Setter Property="FontWeight" Value="Normal"/>
    <Setter Property="Margin" Value="0,0,5,0"/>
  </Style>
  
  <Style x:Key="MoreActionButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid>
            <Image x:Name="image" Source="/TweetOBoxMain;Component/Images/Ic_mrnormal.png" Width="22" Height="14"/>
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" Content=""/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsFocused" Value="True"/>
            <Trigger Property="IsDefaulted" Value="True"/>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Source" TargetName="image" Value="/TweetOBoxMain;Component/Images/Ic_overmore.png"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True"/>
            <Trigger Property="IsEnabled" Value="False"/>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  
  <Style x:Key="GroupEditButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid>
            <Image Source="/Images/edit_Ic.png"/>
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" Content=""/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsFocused" Value="True"/>
            <Trigger Property="IsDefaulted" Value="True"/>
            <Trigger Property="IsMouseOver" Value="True"/>
            <Trigger Property="IsPressed" Value="True"/>
            <Trigger Property="IsEnabled" Value="False"/>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  
  <!--<Style x:Key="SavegpButtonStyle" TargetType="{x:Type Button}">
	<Setter Property="Template">
		<Setter.Value>
			<ControlTemplate TargetType="{x:Type Button}">
				<Grid>
					<Image Source="/Images/bg_btnsave.png"/>
					<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" Content=""/>
				</Grid>
				<ControlTemplate.Triggers>
					<Trigger Property="IsFocused" Value="True"/>
					<Trigger Property="IsDefaulted" Value="True"/>
					<Trigger Property="IsMouseOver" Value="True"/>
					<Trigger Property="IsPressed" Value="True"/>
					<Trigger Property="IsEnabled" Value="False"/>
				</ControlTemplate.Triggers>
			</ControlTemplate>
		</Setter.Value>
	</Setter>
</Style>-->
  
  <Style x:Key="AccountCloseButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid>
            <Image Source="/Images/Ic_accclose.png"/>
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" Content=""/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsFocused" Value="True"/>
            <Trigger Property="IsDefaulted" Value="True"/>
            <Trigger Property="IsMouseOver" Value="True"/>
            <Trigger Property="IsPressed" Value="True"/>
            <Trigger Property="IsEnabled" Value="False"/>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  
  <Style x:Key="FollowButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid>
            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" Content="Follow" Cursor="Hand"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsFocused" Value="True"/>
            <Trigger Property="IsDefaulted" Value="True"/>
            <Trigger Property="IsMouseOver" Value="True"/>
            <Trigger Property="IsPressed" Value="True"/>
            <Trigger Property="IsEnabled" Value="False"/>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="FontFamily" Value="Tahoma"/>
    <Setter Property="FontSize" Value="11"/>
  </Style>
  
  <SolidColorBrush x:Key="TabControlNormalBorderBrush" Color="#8C8E94"/>
  
  <Style x:Key="TabControlStyle" TargetType="{x:Type TabControl}">
    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
    <Setter Property="Padding" Value="4,4,4,4"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="BorderBrush" Value="{StaticResource TabControlNormalBorderBrush}"/>
    <Setter Property="Background" Value="#F9F9F9"/>
    <Setter Property="HorizontalContentAlignment" Value="Center"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TabControl}">
          <Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
            <Grid.ColumnDefinitions>
              <ColumnDefinition x:Name="ColumnDefinition0"/>
              <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
              <RowDefinition x:Name="RowDefinition1" Height="*"/>
            </Grid.RowDefinitions>
            <TabPanel x:Name="HeaderPanel" Margin="2,2,2,10" IsItemsHost="true" Panel.ZIndex="1" Grid.Column="0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Background="#FFF1F0F0" Height="40"/>
            <Border x:Name="ContentPanel" Grid.Column="0" Grid.Row="1" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
              <ContentPresenter x:Name="PART_SelectedContentHost" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ContentSource="SelectedContent"/>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="TabStripPlacement" Value="Bottom">
              <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1"/>
              <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
              <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
              <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
              <Setter Property="Margin" TargetName="HeaderPanel" Value="2,0,2,2"/>
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Left">
              <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
              <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
              <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0"/>
              <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1"/>
              <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
              <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
              <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
              <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
              <Setter Property="Margin" TargetName="HeaderPanel" Value="2,2,0,2"/>
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Right">
              <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
              <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
              <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1"/>
              <Setter Property="Grid.Column" TargetName="ContentPanel" Value="0"/>
              <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
              <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
              <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
              <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
              <Setter Property="Margin" TargetName="HeaderPanel" Value="0,2,2,2"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>  
  
  <Style x:Key="TabItemFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1" Margin="3,3,3,1" SnapsToDevicePixels="true"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  
  <LinearGradientBrush x:Key="TabItemHotBackground" EndPoint="0,1" StartPoint="0,0">
    <GradientStop Color="#EAF6FD" Offset="0.15"/>
    <GradientStop Color="#D9F0FC" Offset=".5"/>
    <GradientStop Color="#BEE6FD" Offset=".5"/>
    <GradientStop Color="#A7D9F5" Offset="1"/>
  </LinearGradientBrush>
  
  <SolidColorBrush x:Key="TabItemSelectedBackground" Color="#F9F9F9"/>
  <SolidColorBrush x:Key="TabItemHotBorderBrush" Color="#3C7FB1"/>
  <SolidColorBrush x:Key="TabItemDisabledBackground" Color="#F4F4F4"/>
  <SolidColorBrush x:Key="TabItemDisabledBorderBrush" Color="#FFC9C7BA"/>
  
  <Style x:Key="GroupsTabItemStyle" TargetType="{x:Type TabItem}">
    <Setter Property="FocusVisualStyle" Value="{StaticResource TabItemFocusVisual}"/>
    <Setter Property="Foreground" Value="Black"/>
    <Setter Property="Padding" Value="6,1,6,1"/>
    <Setter Property="BorderBrush" Value="{StaticResource TabControlNormalBorderBrush}"/>
    <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
    <Setter Property="VerticalContentAlignment" Value="Stretch"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TabItem}">
          <Grid SnapsToDevicePixels="true">
            <Border x:Name="Bd" BorderThickness="1,1,1,0" Padding="{TemplateBinding Padding}">
              <ContentPresenter x:Name="Content"  HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ContentSource="Header" RecognizesAccessKey="True"/>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsSelected" Value="true">
              <Setter Property="Panel.ZIndex" Value="1"/>
              <Setter Property="Background" TargetName="Bd" Value="#FF440012"/>
              <Setter Property="CornerRadius" TargetName="Bd" Value="5"/>
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Bottom">
              <Setter Property="BorderThickness" TargetName="Bd" Value="1,0,1,1"/>
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Left">
              <Setter Property="BorderThickness" TargetName="Bd" Value="1,1,0,1"/>
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Right">
              <Setter Property="BorderThickness" TargetName="Bd" Value="0,1,1,1"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected" Value="true"/>
                <Condition Property="TabStripPlacement" Value="Top"/>
              </MultiTrigger.Conditions>
              <Setter Property="Margin" Value="-2,-2,-2,-1"/>
              <Setter Property="Margin" TargetName="Content" Value="0,0,0,1"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected" Value="true"/>
                <Condition Property="TabStripPlacement" Value="Bottom"/>
              </MultiTrigger.Conditions>
              <Setter Property="Margin" Value="-2,-1,-2,-2"/>
              <Setter Property="Margin" TargetName="Content" Value="0,1,0,0"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected" Value="true"/>
                <Condition Property="TabStripPlacement" Value="Left"/>
              </MultiTrigger.Conditions>
              <Setter Property="Margin" Value="-2,-2,-1,-2"/>
              <Setter Property="Margin" TargetName="Content" Value="0,0,1,0"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected" Value="true"/>
                <Condition Property="TabStripPlacement" Value="Right"/>
              </MultiTrigger.Conditions>
              <Setter Property="Margin" Value="-1,-2,-2,-2"/>
              <Setter Property="Margin" TargetName="Content" Value="1,0,0,0"/>
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Background" TargetName="Bd" Value="{StaticResource TabItemDisabledBackground}"/>
              <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource TabItemDisabledBorderBrush}"/>
              <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  
  <Style x:Key="GpPopupcloseButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid>
            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" Content="X"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsFocused" Value="True"/>
            <Trigger Property="IsDefaulted" Value="True"/>
            <Trigger Property="IsMouseOver" Value="True"/>
            <Trigger Property="IsPressed" Value="True"/>
            <Trigger Property="IsEnabled" Value="False"/>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="FontFamily" Value="Verdana"/>
    <Setter Property="FontWeight" Value="Bold"/>
  </Style>
  
  <Style x:Key="MarkAsReadButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid>
            <Image Cursor="Hand" ToolTip="Mark all as read" Source="/TweetOBoxMain;Component/Images/Ic_clear.png"/>
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" Content=""/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsFocused" Value="True"/>
            <Trigger Property="IsDefaulted" Value="True"/>
            <Trigger Property="IsMouseOver" Value="True"/>
            <Trigger Property="IsPressed" Value="True"/>
            <Trigger Property="IsEnabled" Value="False"/>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <TweetOBoxMain_Utility:UnreadTweetsConverter x:Key="UnreadTweetsConverter"/>
  
  <Style x:Key="SettingButtonStyle" TargetType="{x:Type Button}">
  	<Setter Property="Template">
  		<Setter.Value>
  			<ControlTemplate TargetType="{x:Type Button}">
  				<Grid>
  					<Image x:Name="image" Source="/Images/gear1.png"/>
  					<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
  				</Grid>
  				<ControlTemplate.Triggers>
  					<Trigger Property="IsFocused" Value="True"/>
  					<Trigger Property="IsDefaulted" Value="True"/>
  					<Trigger Property="IsMouseOver" Value="True">
  						<Setter Property="Source" TargetName="image" Value="/TweetOBoxMain;Component/Images/gear2.png"/>
  					</Trigger>
  					<Trigger Property="IsPressed" Value="True"/>
  					<Trigger Property="IsEnabled" Value="False"/>
  				</ControlTemplate.Triggers>
  			</ControlTemplate>
  		</Setter.Value>
  	</Setter>
  </Style>
  
  <Style x:Key="UnFollwButtonStyle" TargetType="{x:Type Button}">
  	<Setter Property="Template">
  		<Setter.Value>
  			<ControlTemplate TargetType="{x:Type Button}">
  				<Grid>
  					<Image Source="/Images/unfollow.png"/>
  					<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" Content=""/>
  				</Grid>
  				<ControlTemplate.Triggers>
  					<Trigger Property="IsFocused" Value="True"/>
  					<Trigger Property="IsDefaulted" Value="True"/>
  					<Trigger Property="IsMouseOver" Value="True"/>
  					<Trigger Property="IsPressed" Value="True"/>
  					<Trigger Property="IsEnabled" Value="False"/>
  				</ControlTemplate.Triggers>
  			</ControlTemplate>
  		</Setter.Value>
  	</Setter>
  </Style>
  
  <Style x:Key="PluginsButtonStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Background="#02000000" Width="Auto" Height="20" CornerRadius="3,0,0,3"  >
            <StackPanel Orientation="Horizontal" Margin="0,2,0,0">
              <TextBlock Text="{Binding PluginStream, Converter={StaticResource StreamNamesConverter}}" Margin="6,0,0,0" VerticalAlignment="Top" HorizontalAlignment="Center" FontFamily="Tahoma" Foreground="{TemplateBinding Foreground}"/>
              <TextBlock Text="/" Foreground="{TemplateBinding Foreground}"/>
              <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
            </StackPanel>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="FontFamily" Value="Tahoma"/>
    <Setter Property="FontSize" Value="11"/>
    <Setter Property="Foreground" Value="#FF656565"/>
    <Setter Property="FontWeight" Value="Normal"/>
    <Setter Property="Margin" Value="0,0,5,0"/>
    <Setter Property="VerticalAlignment" Value="Bottom"/>
  </Style>

</ResourceDictionary>